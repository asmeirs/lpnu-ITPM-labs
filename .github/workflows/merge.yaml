name: Release

on:
  push:
    branches:
      - 'main'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pytest src/tests/ 

  build:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            asmeirs/calc-visualizer:${{ github.sha }}
            asmeirs/calc-visualizer:latest

  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.IAM_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Execute commands via SSM
        id : execute_command
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids ${{ secrets.AWS_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=["sudo -u ubuntu /home/ubuntu/calc-visualizer/server/docker-run.sh"]' \
            --comment "Deploying new version of calc-visualizer" \
            --query "Command.CommandId" \
            --output text)

          echo "Command ID: $COMMAND_ID"
          echo "::set-output name=command_id::$COMMAND_ID"

      - name: Output execution via SSM
        id : output_execution
        run: |
          sleep 15s
          COMMAND_ID=${{ steps.execute_command.outputs.command_id }}
          aws ssm list-command-invocations \
            --details \
            --instance-id ${{ secrets.AWS_INSTANCE_ID }} \
            --query "CommandInvocations[].CommandPlugins[].{Status:Status,Output:Output}" \
            --command-id "$COMMAND_ID" \
            --output text
